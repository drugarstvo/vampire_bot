# screens/scout_info_screen.py
import logging
from aiogram import types
from aiogram.fsm.context import FSMContext

from screens.base import BaseScreen
from states.scout import Scout
from keyboards.presets import scout_info_kb


class ScoutInfoScreen(BaseScreen):
    """
    –ü—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ –¥–ª—è –º–∞—Å—Ç–µ—Ä–æ–≤.
    –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ—Ç, —á—Ç–æ –≤–æ–ø—Ä–æ—Å –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å 1üß† information.
    –°—Ç–∞–≤–∏—Ç FSM –≤ –æ–∂–∏–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞: Scout.waiting_question
    """
    async def _pre_render(
        self,
        message: types.Message,
        actor: types.User | None = None,
        state: FSMContext | None = None,
        error_text: str | None = None,
        **kwargs
    ):
        user = actor or message.from_user
        logging.info("ScoutInfoScreen for tg_id=%s", user.id)

        if state:
            await state.set_state(Scout.waiting_question)

        ctx = {
            "title": "üïµÔ∏è –†–∞–∑–≤–µ–¥–∫–∞: –≤–æ–ø—Ä–æ—Å –º–∞—Å—Ç–µ—Ä–∞–º",
            "lines": [
                "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –¥–ª—è –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π –≥—Ä—É–ø–ø—ã –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.",
                "–°—Ç–æ–∏–º–æ—Å—Ç—å: 1 üß† information.",
                "–ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫—É –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å.",
            ],
            "hint": "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å (–æ—Ç 1 –¥–æ 600 —Å–∏–º–≤–æ–ª–æ–≤):",
            "error_text": error_text,   # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –ø–æ–∫–∞–∂–µ–º –æ—à–∏–±–∫—É
        }

        return {
            "scout_info": ctx,
            "keyboard": scout_info_kb()
        }
